/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filmdatabas;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.MysqlIO;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Jones
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Interface() throws SQLException {
        initComponents();
        Show_Films_In_JTable();
    }
    
    public static Connection getConnection(){
        Connection con;
        try {
            con = (com.mysql.jdbc.Connection)DriverManager.getConnection("jdbc:mysql://localhost/film_databas", "root", "");
            return con;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
    public static ArrayList<Film> filmList() throws SQLException{
        ArrayList<Film> usersList = new ArrayList<>();
        Connection connection = getConnection();
        String sql = "SELECT * FROM film_data";
        
        Statement stmt1;
        Statement stmt2;
        ResultSet rs1;
        ResultSet rs2;
        
        try {
            stmt1 = connection.createStatement();
            stmt2 = connection.createStatement();
            rs1 = stmt1.executeQuery(sql);
            Film film;
            while(rs1.next()){
                int id = rs1.getInt("id");
                String sql2 = "SELECT namn FROM genre WHERE id IN (SELECT genre_ID FROM film_genre WHERE film_ID ="+id+")";
                rs2 = stmt2.executeQuery(sql2);
                String genres = "";
                while(rs2.next())
                    genres += rs2.getString("namn")+", ";
                film = new Film(id, rs1.getString("titel"), genres, rs1.getString("reg_namn"),rs1.getString("bet_namn"));
                usersList.add(film);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return usersList;
    }
    public void Show_Films_In_JTable() throws SQLException{
        ArrayList<Film> lista = filmList();
        DefaultTableModel model = (DefaultTableModel) jTable_Display_Films.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < lista.size(); i++) {
            row[0] = lista.get(i).getId();
            row[1] = lista.get(i).getTitel();
            row[2] = lista.get(i).getRegissör();
            row[3] = lista.get(i).getGenre();
            row[4] = lista.get(i).getBetyg();
            model.addRow(row);
        }
    }
    // Execute the SQL Query
    public void executeSQlQuery(String query, String message){
        Connection con = getConnection();
        Statement stmt;
        try {
            stmt = con.createStatement();
            if(stmt.executeUpdate(query) == 1){
                JOptionPane.showMessageDialog(null, message );
                DefaultTableModel model = (DefaultTableModel) jTable_Display_Films.getModel();
                model.setRowCount(0);
                Show_Films_In_JTable();
                
            }else
                JOptionPane.showMessageDialog(null,  message);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_Films = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_Id = new javax.swing.JTextField();
        jTextField_Titel = new javax.swing.JTextField();
        jTextField_Regissör = new javax.swing.JTextField();
        jButton_Delete = new javax.swing.JButton();
        jButton_Insert = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();
        jComboBox_Betyg = new javax.swing.JComboBox<>();
        jComboBox_Genre = new javax.swing.JComboBox<>();
        jButton_Remove_Genre = new javax.swing.JButton();
        jButton_Add_Genre = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jTable_Display_Films.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Titel", "Regissör", "Genre", "Betyg"
            }
        ));
        jTable_Display_Films.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_FilmsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_Films);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(210, 30, 590, 380);

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Genre:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 210, 80, 30);

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Betyg:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 330, 70, 30);

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Titel:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(30, 110, 60, 30);

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Regissör:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 160, 100, 30);

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Id:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(50, 60, 40, 30);
        jPanel1.add(jTextField_Id);
        jTextField_Id.setBounds(90, 60, 100, 30);
        jPanel1.add(jTextField_Titel);
        jTextField_Titel.setBounds(90, 110, 100, 30);
        jPanel1.add(jTextField_Regissör);
        jTextField_Regissör.setBounds(90, 160, 100, 30);

        jButton_Delete.setBackground(new java.awt.Color(0, 0, 0));
        jButton_Delete.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jButton_Delete.setForeground(new java.awt.Color(204, 0, 0));
        jButton_Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete.png"))); // NOI18N
        jButton_Delete.setText("Delete");
        jButton_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Delete);
        jButton_Delete.setBounds(760, 500, 160, 70);

        jButton_Insert.setBackground(new java.awt.Color(0, 0, 0));
        jButton_Insert.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jButton_Insert.setForeground(new java.awt.Color(102, 255, 0));
        jButton_Insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Add.png"))); // NOI18N
        jButton_Insert.setText("Insert");
        jButton_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InsertActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Insert);
        jButton_Insert.setBounds(80, 500, 160, 70);

        jButton_Update.setBackground(new java.awt.Color(0, 0, 0));
        jButton_Update.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jButton_Update.setForeground(new java.awt.Color(255, 255, 0));
        jButton_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        jButton_Update.setText("Update");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Update);
        jButton_Update.setBounds(410, 500, 190, 70);

        jComboBox_Betyg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "hemsk", "dålig", "sådär", "bra", "grym" }));
        jPanel1.add(jComboBox_Betyg);
        jComboBox_Betyg.setBounds(90, 330, 100, 30);

        jComboBox_Genre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "romance", "action", "fantasy", "comedy", "adventure", "drama", "thriller", "horror", "musical" }));
        jPanel1.add(jComboBox_Genre);
        jComboBox_Genre.setBounds(90, 212, 100, 30);

        jButton_Remove_Genre.setBackground(new java.awt.Color(0, 0, 0));
        jButton_Remove_Genre.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton_Remove_Genre.setForeground(new java.awt.Color(204, 0, 0));
        jButton_Remove_Genre.setText("Remove");
        jButton_Remove_Genre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_GenreActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Remove_Genre);
        jButton_Remove_Genre.setBounds(90, 290, 100, 30);

        jButton_Add_Genre.setBackground(new java.awt.Color(0, 0, 0));
        jButton_Add_Genre.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton_Add_Genre.setForeground(new java.awt.Color(0, 255, 51));
        jButton_Add_Genre.setText("Add");
        jButton_Add_Genre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_GenreActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Add_Genre);
        jButton_Add_Genre.setBounds(90, 250, 100, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpg"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 980, 620);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_Display_FilmsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_FilmsMouseClicked
        //Visar valda rader i JtextFields
        int i = jTable_Display_Films.getSelectedRow();
        TableModel model = jTable_Display_Films.getModel();
        jTextField_Id.setText(model.getValueAt(i, 0).toString());
        jTextField_Titel.setText(model.getValueAt(i, 1).toString());
        jTextField_Regissör.setText(model.getValueAt(i, 2).toString());
    }//GEN-LAST:event_jTable_Display_FilmsMouseClicked
    
    public boolean hasNamn(String table, String namn){
        // kollar om databasen har det angivna namnet
        Connection con = getConnection();
        String sql = "SELECT * FROM " + table;
        try {
            Statement stmt = con.createStatement();
            ResultSet data = stmt.executeQuery(sql);  
            while(data.next()){
                if(data.getString("namn").equalsIgnoreCase(namn))
                    return true;
            }
        } catch (Exception e) {
        }
        return false;
    }
    
    public int getDatabaseId(String table, String namn){
        Connection con = getConnection();
        String sql = "SELECT id FROM " + table.trim() + " WHERE namn='" + namn + "'";
        int id = 0;
        try {
            Statement stmt = con.createStatement();
            ResultSet data = stmt.executeQuery(sql);
            while(data.next())
                id = data.getInt("id");
        } catch (Exception e) {
            System.out.println(e.getMessage());
            throw new Error();
        }return id;
    }
    
    private void jButton_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteActionPerformed
        String query = "Delete FROM film WHERE id="+jTextField_Id.getText();
        
        executeSQlQuery(query, "Deleted");
    }//GEN-LAST:event_jButton_DeleteActionPerformed

    private void jButton_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InsertActionPerformed
        String titel = jTextField_Titel.getText();
        String regissör = jTextField_Regissör.getText();
        
        if(!hasNamn("regissör", regissör)){
            String sql = "INSERT INTO regissör VALUES(null,'"+regissör+"')";
            executeSQlQuery(sql, "Ny regissör " + regissör + " är tillagd");
        }
        int regisssör_id = getDatabaseId("regissör", regissör);
        int betyg_id = jComboBox_Betyg.getSelectedIndex()+1;
        
        String query = "INSERT INTO film VALUES(null,'"+titel+"',"+betyg_id+","+regisssör_id+")";
        executeSQlQuery(query, "Ny film tillagd");
    }//GEN-LAST:event_jButton_InsertActionPerformed

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
        String titel = jTextField_Titel.getText();
        String regissör = jTextField_Regissör.getText();
        String id = jTextField_Id.getText();
        if(!hasNamn("regissör", regissör)){
            String sql = "INSERT INTO regissör VALUES(null,'"+regissör+"')";
            executeSQlQuery(sql, "Ny regissör \"" + regissör + "\" är tillagd");
        }
        int regisssör_id = getDatabaseId("regissör", regissör);
        int betyg_id = jComboBox_Betyg.getSelectedIndex()+1;
        
        String query = "UPDATE film SET namn='"+titel+"',bet_ID="+betyg_id+",regissör_ID="+regisssör_id+" WHERE id="+id;//"INSERT INTO film VALUES(null,'"+titel+"',"+betyg_id+","+regisssör_id+")";
        executeSQlQuery(query, "film med id="+id+" har uppdaterats");
    }//GEN-LAST:event_jButton_UpdateActionPerformed

    private void jButton_Add_GenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_GenreActionPerformed
        String query = "INSERT INTO film_genre VALUES("+jTextField_Id.getText()+","+(jComboBox_Genre.getSelectedIndex()+1)+")";
        
        executeSQlQuery(query, "Ny genre tillagd i filmen med id="+jTextField_Id.getText());
    }//GEN-LAST:event_jButton_Add_GenreActionPerformed

    private void jButton_Remove_GenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_GenreActionPerformed
        String query = "DELETE FROM film_genre WHERE genre_ID="+(jComboBox_Genre.getSelectedIndex()+1)+" AND film_ID="+jTextField_Id.getText();
        
        executeSQlQuery(query, "Genren \""+jComboBox_Genre.getSelectedItem().toString()+"\" togs bort!");
    }//GEN-LAST:event_jButton_Remove_GenreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Interface().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add_Genre;
    private javax.swing.JButton jButton_Delete;
    private javax.swing.JButton jButton_Insert;
    private javax.swing.JButton jButton_Remove_Genre;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JComboBox<String> jComboBox_Betyg;
    private javax.swing.JComboBox<String> jComboBox_Genre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_Films;
    private javax.swing.JTextField jTextField_Id;
    private javax.swing.JTextField jTextField_Regissör;
    private javax.swing.JTextField jTextField_Titel;
    // End of variables declaration//GEN-END:variables
}
